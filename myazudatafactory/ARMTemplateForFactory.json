{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "myazudatafactory"
		},
		"myazusqldblinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'myazusqldblinkedservice'"
		},
		"myazustoragelinkedservice_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'myazustoragelinkedservice'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "CopyFromBlobToBlob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "InputDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OutputDataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/InputDataset')]",
				"[concat(variables('factoryId'), '/datasets/OutputDataset')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_movies_to_db_p8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_movies_to_db",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "load_movies_to_db",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"movies": {},
									"moviestable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/load_movies_to_db')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_movies_to_db_by_copy_p8')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "load_movies_to_db_by_copy_p8",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "sampledata//moviesDB.csv"
							},
							{
								"name": "Destination",
								"value": "dbo.movies_copy"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "movie",
											"type": "String"
										},
										"sink": {
											"name": "id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "title",
											"type": "String"
										},
										"sink": {
											"name": "title",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "genres",
											"type": "String"
										},
										"sink": {
											"name": "genres",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String"
										},
										"sink": {
											"name": "year",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Rating",
											"type": "String"
										},
										"sink": {
											"name": "rating",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Rotton Tomato",
											"type": "String"
										},
										"sink": {
											"name": "rotten_tomatoes",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "moviesDB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "movies_copy_table",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/moviesDB')]",
				"[concat(variables('factoryId'), '/datasets/movies_copy_table')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myazustoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "inputEmp.txt",
						"container": "adfv2tutorial"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myazustoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myazustoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "adfv2tutorial"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myazustoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/melb_inner_2016')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myazustoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "melb_inner_2016.json",
						"container": "urbanforest"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"areasqkm16": {
							"type": "number"
						},
						"gcc_code16": {
							"type": "string"
						},
						"gcc_name16": {
							"type": "string"
						},
						"sa1_7dig16": {
							"type": "string"
						},
						"sa1_main16": {
							"type": "string"
						},
						"sa2_5dig16": {
							"type": "string"
						},
						"sa2_main16": {
							"type": "string"
						},
						"sa2_name16": {
							"type": "string"
						},
						"sa3_code16": {
							"type": "string"
						},
						"sa3_name16": {
							"type": "string"
						},
						"sa4_code16": {
							"type": "string"
						},
						"sa4_name16": {
							"type": "string"
						},
						"ste_code16": {
							"type": "string"
						},
						"ste_name16": {
							"type": "string"
						},
						"type": {
							"type": "string"
						},
						"geometry": {
							"type": "object",
							"properties": {
								"type": {
									"type": "string"
								},
								"coordinates": {
									"type": "array",
									"items": {
										"type": "array",
										"items": {
											"type": "array",
											"items": {
												"type": "array",
												"items": {
													"type": "number"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myazustoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/melb_urban_forest_2016')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myazustoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "melb_urban_forest_2016.txt",
						"container": "urbanforest"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myazustoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/moviesDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myazustoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "moviesDB.csv",
						"container": "sampledata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "movie",
						"type": "String"
					},
					{
						"name": "title",
						"type": "String"
					},
					{
						"name": "genres",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "Rating",
						"type": "String"
					},
					{
						"name": "Rotton Tomato",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myazustoragelinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/movies_copy_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myazusqldblinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "genres",
						"type": "varchar"
					},
					{
						"name": "year",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "rating",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "rotten_tomatoes",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "movies_copy"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myazusqldblinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/movies_table')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "myazusqldblinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "title",
						"type": "varchar"
					},
					{
						"name": "genres",
						"type": "varchar"
					},
					{
						"name": "year",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "rating",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "rotten_tomatoes",
						"type": "smallint",
						"precision": 5
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "movies"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/myazusqldblinkedservice')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/myazusqldblinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('myazusqldblinkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/myazustoragelinkedservice')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('myazustoragelinkedservice_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "CopyPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 1,
						"startTime": "2020-04-30T04:34:00.000Z",
						"endTime": "2020-04-30T14:50:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/CopyPipeline')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/load_movies_to_db')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "moviesDB",
								"type": "DatasetReference"
							},
							"name": "movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "movies_table",
								"type": "DatasetReference"
							},
							"name": "moviestable"
						}
					],
					"transformations": [
						{
							"name": "fixcolyear"
						}
					],
					"script": "source(output(\n\t\tmovie as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as short,\n\t\tRating as short,\n\t\t{Rotton Tomato} as short\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> movies\nmovies derive(year = abs(toInteger(year))) ~> fixcolyear\nfixcolyear sink(input(\n\t\tid as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as integer,\n\t\trating as integer,\n\t\trotten_tomatoes as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tmapColumn(\n\t\tid = movie,\n\t\ttitle,\n\t\tgenres,\n\t\tyear,\n\t\trating = Rating,\n\t\trotten_tomatoes = {Rotton Tomato}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> moviestable"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/moviesDB')]",
				"[concat(variables('factoryId'), '/datasets/movies_table')]"
			]
		}
	]
}