{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "myazudatafactory"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "denormalise_movies",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/denormalise_movies')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/denormalise_movies')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "movies_table",
								"type": "DatasetReference"
							},
							"name": "moviestable"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "denorm_movies",
								"type": "DatasetReference"
							},
							"name": "json"
						},
						{
							"dataset": {
								"referenceName": "denorm_movies_parquet",
								"type": "DatasetReference"
							},
							"name": "parquet"
						}
					],
					"transformations": [
						{
							"name": "splitgenres"
						},
						{
							"name": "denormalisegenres"
						}
					],
					"script": "source(output(\n\t\tid as integer,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as integer,\n\t\trating as integer,\n\t\trotten_tomatoes as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> moviestable\nmoviestable derive(genres = split(genres,'|')) ~> splitgenres\nsplitgenres foldDown(unroll(genres, genres),\n\tmapColumn(\n\t\tid,\n\t\ttitle,\n\t\tgenre = genres,\n\t\tyear,\n\t\trating,\n\t\trotten_tomatoes\n\t),\n\tskipDuplicateMapInputs: false,\n\tskipDuplicateMapOutputs: false) ~> denormalisegenres\ndenormalisegenres sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> json\ndenormalisegenres sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> parquet"
				}
			},
			"dependsOn": []
		}
	]
}